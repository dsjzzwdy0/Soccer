<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/cache
       					http://www.springframework.org/schema/cache/spring-cache.xsd">
       					
	<!-- 基础数据所需的运行环境类 -->
	<bean id="applicationContext" class="com.loris.common.context.ApplicationContextHelper"/>
	
	<!-- 自动扫描该包，将注解类的Bean实体扫描到Spring-mvc控制容器中 -->
	<!--  context:component-scan base-package="com.loris.common, com.loris.client, com.loris.soccer, com.loris.auth" />-->
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.loris.common, com.loris.client, com.loris.soccer" />
	
	<!-- 引入Spring -->
    <import resource="classpath:/conf/spring-plugins.xml"/>    
    <import resource="classpath:/conf/spring-schedulers.xml"/>
    
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}"></property>		<!-- 初始化连接大小 -->
		<property name="maxActive" value="${maxActive}"></property>			<!-- 连接池最大数量 -->
		<property name="maxIdle" value="${maxIdle}"></property>	 			<!-- 连接池最大空闲 -->
		<property name="minIdle" value="${minIdle}"></property>  			<!-- 连接池最小空闲 -->
		<property name="maxWait" value="${maxWait}"></property>  			<!-- 获取连接最大等待时间 -->
		<property name="validationQuery" value="SELECT 1"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"></property>
		<property name="numTestsPerEvictionRun" value="50"></property>
		<property name="minEvictableIdleTimeMillis" value="120000"></property>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="6000000"/>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
			    <value>classpath*:com/loris/auth/dao/mapper/*Mapper.xml</value>
			</list>
		</property>
		<property name="configLocation" value="classpath:/conf/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.loris.client, com.loris.soccer, com.loris.auth" />
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql" />
				</bean>
			</array>
		</property>
		<property name="globalConfig">
	        <bean class="com.baomidou.mybatisplus.core.config.GlobalConfig">
	            <property name="refresh" value="true"/>
	        </bean>
	    </property>
	</bean>
    
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="
		    com.loris.common.dao,
		    com.loris.client.dao,
		    com.loris.auth.dao,
		    com.loris.soccer.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 验证码数据配置 -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">125</prop>
                        <prop key="kaptcha.image.height">45</prop>
                        <prop key="kaptcha.textproducer.font.size">45</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>